import zstackwoodpecker.test_state as ts_header
TestAction = ts_header.TestAction
def path():

    return dict(initial_formation="template2", path_list=[
	[TestAction.create_volume, "volume1", "=scsi"],
	[TestAction.create_volume, "volume2", "=scsi"],
	[TestAction.create_volume, "volume3", "=scsi"],
	[TestAction.create_volume, "volume4", "=scsi"],
	[TestAction.create_volume, "volume5", "=scsi"],
	[TestAction.create_volume, "volume6", "=scsi"],
	[TestAction.create_volume, "volume7", "=scsi"],
	[TestAction.create_volume, "volume8", "=scsi"],
	[TestAction.attach_volume, "vm1", "volume1"],
	[TestAction.attach_volume, "vm1", "volume2"],
	[TestAction.attach_volume, "vm1", "volume3"],
	[TestAction.attach_volume, "vm1", "volume4"],
	[TestAction.attach_volume, "vm1", "volume5"],
	[TestAction.attach_volume, "vm1", "volume6"],
	[TestAction.attach_volume, "vm1", "volume7"],
	[TestAction.attach_volume, "vm1", "volume8"],
	[TestAction.detach_volume, "volume1"],
	[TestAction.create_volume_snapshot, "vm1-root", "snapshot1"],
	[TestAction.attach_volume, "vm1", "volume1"],
	[TestAction.create_volume_backup, "volume1", "backup1"],
	[TestAction.detach_volume, "volume1"],
        [TestAction.stop_vm, "vm1"],
	[TestAction.change_vm_image, "vm1"],
        [TestAction.start_vm, "vm1"],
	[TestAction.attach_volume, "vm1", "volume1"],
	[TestAction.resize_data_volume, "volume1", 5*1024*1024],
	[TestAction.detach_volume, "volume1"],
	[TestAction.attach_volume, "vm1", "volume1"],
        [TestAction.stop_vm, "vm1"],
	[TestAction.use_volume_backup, "backup1"],
        [TestAction.start_vm, "vm1"],
	[TestAction.detach_volume, "volume1"],
	[TestAction.detach_volume, "volume2"],
	[TestAction.detach_volume, "volume3"],
	[TestAction.detach_volume, "volume4"],
	[TestAction.detach_volume, "volume5"],
	[TestAction.detach_volume, "volume6"],
	[TestAction.detach_volume, "volume7"],
	[TestAction.detach_volume, "volume8"],
        [TestAction.stop_vm, "vm1"],
	[TestAction.ps_migrate_volume, "vm1-root"],
        [TestAction.start_vm, "vm1"],
	[TestAction.reboot_vm, "vm1"]])

