import zstackwoodpecker.test_state as ts_header
TestAction = ts_header.TestAction
def path():
    return dict(initial_formation="template2",
        path_list=[[TestAction.create_volume, "volume1", "=scsi"],
	[TestAction.create_volume, "volume2", "=scsi"],
	[TestAction.create_volume, "volume3", "=scsi"],
	[TestAction.create_volume, "volume4", "=scsi"],
	[TestAction.create_volume, "volume5", "=scsi"],
	[TestAction.create_volume, "volume6", "=scsi"],
	[TestAction.create_volume, "volume7", "=scsi"],
	[TestAction.create_volume, "volume8", "=scsi"],
	[TestAction.delete_volume, "volume1"],
	[TestAction.delete_volume, "volume2"],
	[TestAction.delete_volume, "volume3"],
	[TestAction.delete_volume, "volume4"],
	[TestAction.delete_volume, "volume5"],
	[TestAction.delete_volume, "volume6"],
	[TestAction.delete_volume, "volume7"],
	[TestAction.delete_volume, "volume8"],
	[TestAction.create_image_from_volume, "vm1", "image1"],
	[TestAction.create_volume, "volume9", "=scsi"],
	[TestAction.create_volume_snapshot, "volume9", 'snapshot1'],
	[TestAction.delete_volume, "volume9"],
	[TestAction.clone_vm, "vm1", "vm2", "full"],
	[TestAction.create_volume, "volume10", "=scsi"],
	[TestAction.attach_volume, "vm1", "volume10"],
	[TestAction.create_volume_backup, "volume10", "backup1"],
	[TestAction.detach_volume, "volume10", "vm1"],
	[TestAction.attach_volume, "vm1", "volume10"],
	[TestAction.create_volume_snapshot, "vm1-root", 'snapshot1'],
	[TestAction.create_volume_snapshot, "volume10", 'snapshot2'],
	[TestAction.reboot_vm, "vm1"]])
